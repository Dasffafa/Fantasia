buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.1'
group = 'com.brotherJiang.fantasia' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'fantasia'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: "snapshot", version: "20210309-1.16.5"

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                fantasia {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                fantasia {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'fantasia', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                fantasia {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url = "https://maven.blamejared.com"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        url = "https://maven.ellpeck.de"
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'

    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.16.5:3.0.57')

    compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.6.1.75:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.6.1.75")

//    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-53:api")
//    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-53")

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.0")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.0:api")

}

jar {
    manifest {
        attributes([
            "Specification-Title": "fantasia",
            "Specification-Vendor": "fantasiasareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"fantasiasareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
